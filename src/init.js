// noinspection NonAsciiCharacters

import {вМассив, значения} from "./functions.js"
import {написать, обновить, очиститьКонсоль} from "./gui.js"
import {локация, неЗадана, нет, объект, персонаж, предмет} from "./main.js"

const всеОбъекты = []

export class БазовыйОбъект {
    constructor() {
        всеОбъекты.push(this)
    }

    инициализировать() {}
}


export class Контейнер extends БазовыйОбъект {
    объекты = []

    инициализировать() {
        super.инициализировать()
        const массив = []
        for(let названиеОбъекта of вМассив(this.объекты)) {
            const объ = предмет[названиеОбъекта] ?? объект[названиеОбъекта]
            объ.контейнер = this
            массив.добавить(объ)
        }
        this.объекты = массив
    }

    добавить(...объ) {
        this.объекты.добавить(...объ)
    }

    удалить(...объ) {
        this.объекты.удалить(...объ)
    }

    содержит(объ) {
        return this.объекты.содержат(объ)
    }
}


export class Локация extends Контейнер {
    инициализировать() {
        super.инициализировать()
        this.команды = вМассив(this.команды)

        const массив = []
        for(let выход of вМассив(this.выходы)) {
            массив.добавить([выход[0], локация[выход[1]]])
        }
        this.выходы = массив
    }
}


export class Объект extends Контейнер {
    команды = []

    инициализировать() {
        super.инициализировать()
    }
}


export class Проход extends БазовыйОбъект {
    локация0
    локация1

    инициализировать() {
        super.инициализировать()
    }
}


export class Предмет extends Объект {
    инициализировать() {
        super.инициализировать()
        this.команды.добавить({
            текст: "взять",
            условие: (предм) => !персонаж.игрок.имеет(предм),
            выполнение: (предм) => {
                персонаж.игрок.снять(предм)
                персонаж.игрок.взять(предм)
            }
        }, {
            текст: "положить",
            условие: (предм) => персонаж.игрок.имеет(предм),
            выполнение: (предм) => персонаж.игрок.положить(предм)
        })
    }

    переместитьВ(конт) {
        if(this.контейнер === конт) return
        if(this.контейнер) this.контейнер.объекты.удалить(this)
        конт.объекты.добавить(this)
        this.контейнер = конт
    }

    переместитьНа(конт) {
        this.переместитьВ(конт)
    }

    находитсяВ(конт) {
        return this.контейнер === конт
    }
}


export class Одежда extends Предмет {
    инициализировать() {
        super.инициализировать()
        this.команды.добавить({
            текст: "надеть",
            условие: (одежда) => !персонаж.игрок.одетВ(одежда),
            выполнение: (одежда) => {
                персонаж.игрок.положить(одежда)
                персонаж.игрок.надеть(одежда)
            }
        }, {
            текст: "снять",
            условие: (одежда) => персонаж.игрок.одетВ(одежда),
            выполнение: (одежда) => персонаж.игрок.снять(одежда)
        })
    }
}


function добавитьВМассив(перс, массив, предм) {
    if(массив.содержит(предм)) return
    if(предм.контейнер) предм.контейнер.объекты.удалить(предм)
    перс.локация.объекты.удалить(предм)
    массив.добавить(предм)
}

function удалитьИзМассива(перс, массив, предм) {
    if(!массив.содержит(предм)) return
    массив.удалить(предм)
    перс.локация.объекты.добавить(предм)
}

export class Персонаж extends Объект {
    инвентарь = []
    одежда = []
    локация

    переместитьВ(лок) {
        this.локация = лок
        очиститьКонсоль()
    }

    находитсяВ(лок) {
        return this.локация === лок
    }

    имеет(предм) {
        return this.инвентарь.содержит(предм)
    }

    взять(предм){
        if(this.инвентарь.содержит(предм)) return
        const макс = this.максимумПредметовВИнвентаре
        if(макс >= 0 && this.инвентарь.размер >= макс) {
            написать("Вы не можете нести больше предметов.")
            return
        }
        добавитьВМассив(this, this.инвентарь, предм)
    }

    положить(предм) {
        if(!this.инвентарь.содержит(предм)) return
        удалитьИзМассива(this, this.инвентарь, предм)
    }

    одетВ(предм) {
        return this.одежда.содержит(предм)
    }

    надеть(предм){
        const макс = this.максимумПредметовВИнвентаре
        if(макс >= 0 && this.инвентарь.размер >= макс) {
            написать("Вы не можете нести больше предметов.")
            return
        }
        добавитьВМассив(this, this.одежда, предм)
    }

    снять(предм) {
        удалитьИзМассива(this, this.одежда, предм)
    }

    уничтожить(предм) {
        this.инвентарь.удалить(предм)
        this.одежда.удалить(предм)
    }
}



export function инициализация() {
    for(const объ of всеОбъекты) {
        объ.инициализировать()
    }

    обновить()
}