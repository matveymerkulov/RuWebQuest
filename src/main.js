// noinspection NonAsciiCharacters

import {выполнитьПунктМеню, обновить, очиститьКонсоль, показатьМеню} from "./gui.js"
import {вМассив, вСтроку, закрыт, скрыт, этоМассив, этоФункция} from "./functions.js"
import {игрок} from "./person.js"

export const да = true, нет = false
export const неЗадан = undefined, неЗадана = undefined, неЗадано = undefined, неЗаданы = undefined

export const Падеж = Object.freeze({
    именительный: 0,
    родительный: 1,
    дательный: 2,
    винительный: 3,
    творительный: 4,
    предложный: 5
})



let действияПеред = () => {}
export function задатьДействияПеред(функция) {
    действияПеред = функция
}



export function просклонятьНазвание(объ, падеж = Падеж.именительный) {
    return просклонять(этоФункция(объ.название) ? объ.название(объ) : объ.название, падеж)
}

export function просклонять(текст, падеж = Падеж.именительный) {
    if(!этоМассив(текст)) return текст
    if(текст.размер === 2) return текст[падеж === Падеж.винительный ? 1 : 0]
    return текст[падеж] ?? текст[0]
}



let меню

function обработатьКоманду(команда, параметр, префикс = "") {
    if(команда.условие && !команда.условие(параметр)) return
    const узлы = (префикс + вСтроку(команда.текст)).разбить("/")
    let уровень = меню
    for(let и = 0; и < узлы.размер; и++) {
        const узел = узлы[и]
        if(и === узлы.размер - 1) {
            if(уровень[узел] !== неЗадан) {
                console.error(`В меню уже есть команда "${команда}"`)
            }
            уровень[узел] = [команда, параметр]
        } else {
            if(уровень[узел] === неЗадан) {
                уровень[узел] = {}
            }
            уровень = уровень[узел]
        }
    }
}

function обработатьКоманды(объ, префикс = "") {
    if(скрыт(объ)) return

    for(let команда of вМассив(объ.команды)) {
        обработатьКоманду(команда, объ, префикс)
    }

    if(закрыт(объ)) return

    for(let вложенныйОбъект of объ.объекты) {
        обработатьКоманды(вложенныйОбъект, просклонятьНазвание(вложенныйОбъект, Падеж.винительный) + "/")
    }
}



export function обновитьКоманды() {
    действияПеред()

    const лок = игрок.локация

    меню = {}
    обработатьКоманды(лок)

    for(let объ of игрок.инвентарь) {
        обработатьКоманды(объ, просклонятьНазвание(объ) + "/")
    }
    for(let объ of игрок.одежда) {
        обработатьКоманды(объ, просклонятьНазвание(объ, Падеж.винительный) + "/")
    }
}

export function выполнитьКоманду(текст) {
    const лок = игрок.локация

    for(const [пункт, узел] of Object.entries(меню)) {
        if(текст === пункт) {
            if(этоМассив(узел)) {
                выполнитьПунктМеню(узел)
                return
            }
            показатьМеню(узел)
            return
        }
    }

    for(const выход of лок.выходы ?? []) {
        const командаВыхода = выход[0]
        if(командаВыхода === текст) {
            игрок.локация = выход[1]
            очиститьКонсоль()
            обновить()
            return
        }
    }
}