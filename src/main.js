// noinspection NonAsciiCharacters

import {update} from "./gui.js"
import {вМассив, вСтроку, значения, пары, этоСтрока} from "./functions.js"

export const да = true, нет = false
export const неЗадан = undefined, неЗадана = undefined, неЗадано = undefined, неЗаданы = undefined

export const локация = {}, локацию = локация, локации = локация
export const предмет = {}
export const объект = {}
export const персонаж = {}

export const Падеж = Object.freeze({
    именительный: 0,
    родительный: 1,
    дательный: 2,
    винительный: 3,
    творительный: 4,
    предложный: 5
})



let описаниеПоУмолчанию = ""
export function задатьОписаниеПоУмолчанию(текст) {
    описаниеПоУмолчанию = текст
}

let действияПеред = () => {}
export function задатьДействияПеред(функция) {
    действияПеред = функция
}


export function просклонять(текст, падеж) {
    if(!Array.isArray(текст)) return текст
    return текст[падеж] ?? текст[0]
}


document.addEventListener("DOMContentLoaded", () => {
    for(let контейнер of значения(локация, объект, предмет)) {
        const массив = []
        for(let объ of вМассив(контейнер.объекты)) {
            массив.добавить(предмет[объ] ?? объект[объ])
        }
        контейнер.объекты = массив

        контейнер.добавить = function(...объ) {
            this.объекты.добавить(...объ)
        }

        контейнер.удалить = function(...объ) {
            this.объекты.удалить(...объ)
        }

        контейнер.содержит = function(объ) {
            return this.объекты.содержат(объ)
        }
    }



    for(let лок of значения(локация)) {
        лок.команды = вМассив(лок.команды)

        const массив = []
        for(let выход of вМассив(лок.выходы)) {
            массив.добавить([выход[0], локация[выход[1]]])
        }
        лок.выходы = массив
    }



    for(let предм of значения(предмет)) {
        предм.контейнер = неЗадан

        предм.переместитьВ = function(конт) {
            if(this.контейнер === конт) return
            if(this.контейнер) this.контейнер.объекты.удалить(this)
            конт.объекты.добавить(this)
            this.контейнер = конт
        }

        предм.переместитьНа = function(конт) {
            this.переместитьВ(конт)
        }

        предм.находитсяВ = function(конт) {
            return this.контейнер === конт
        }

        предм.скрыть = function() {
            this.контейнер = неЗадан
        }
    }



    for(let перс of значения(персонаж)) {
        перс.инвентарь ??= []
        перс.локация ??= неЗадана

        перс.переместитьВ = function(лок) {
            this.локация = лок
        }

        перс.находитсяВ = function(лок) {
            return this.локация === лок
        }

        перс.взять = function(предм){
            if(this.инвентарь.содержит(предм)) return
            this.локация.объекты.удалить(предм)
            this.инвентарь.добавить(предм)
        }

        перс.бросить = function(предм) {
            if(!this.инвентарь.содержит(предм)) return
            this.инвентарь.удалить(предм)
            this.локация.объекты.добавить(предм)
        }

        перс.имеет = function(объ) {
            return this.инвентарь.содержит(объ)
        }
    }

    update()
})



function вЛокацию(объ) {
    return этоСтрока(объ) ? локация[объ] : объ
}


let меню

function обработатьКоманду(команда, параметр, префикс = "") {
    if(команда.условие && !команда.условие(параметр)) return
    const узлы = вСтроку(префикс + команда.текст).разбить("/")
    let уровень = меню
    for(let и = 0; и < узлы.размер; и++) {
        const узел = узлы[и]
        if(и === узлы.размер - 1) {
            if(уровень[узел] !== неЗадан) {
                console.error(`В меню уже есть команда "${команда}"`)
            }
            уровень[узел] = команда
        } else {
            if(уровень[узел] === неЗадан) {
                уровень[узел] = {}
            }
            уровень = уровень[узел]
        }
    }
}

function обработатьКоманды(команды, параметр, префикс = "") {
    for(let команда of вМассив(команды)) {
        обработатьКоманду(команда, параметр, префикс)
    }
}

export function обновитьКоманды() {
    const игрок = персонаж.игрок
    const лок = игрок.локация

    меню = {}
    обработатьКоманды(лок.команды, лок)
    for(let объ of лок.объекты) {
        обработатьКоманды(объ.команды, объ, вСтроку(объ.название) + "/")
    }

    console.log(меню)
}

export function выполнитьКоманду(текст) {
    const игрок = персонаж.игрок
    const лок = игрок.локация

    for(let выход of лок.выходы ?? []) {
        const командаВыхода = выход[0].разбить("/")[0]
        if(командаВыхода === текст) {
            игрок.локация = выход[1]
            update()
            return
        }
    }
}